generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model images {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  file_id       String
  url           String
  userId        String?      @unique @db.ObjectId
  users         users?       @relation(fields: [userId], references: [id])
  shopId        String?      @unique @db.ObjectId
  shopReviewsId String?      @db.ObjectId
  shops         shops?       @relation(fields: [shopId], references: [id])
  shopReviews   shopReviews? @relation(fields: [shopReviewsId], references: [id])
}

model users {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String        @unique
  password    String?
  avatar      images?
  following   String[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  shopReviews shopReviews[]
}

model sellers {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String   @unique
  password    String?
  phoneNumber String
  country     String
  stripeId    String?
  shopId      String?  @db.ObjectId
  shop        shops?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  shopsId     String?  @db.ObjectId
}

model shopReviews {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String?  @db.ObjectId
  users     users?   @relation(fields: [userId], references: [id])
  rating    Float
  reviews   String?
  shopsId   String?  @db.ObjectId
  shops     shops?   @relation(fields: [shopsId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  images    images[]
}

model shops {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  bio          String?
  category     String
  avatar       images?
  coverBanner  String?
  address      String
  openingHours String?
  website      String?
  socialLinks  Json[]
  ratings      Float         @default(0)
  reviews      shopReviews[]
  sellerId     String        @unique @db.ObjectId
  sellers      sellers?      @relation(fields: [sellerId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}
